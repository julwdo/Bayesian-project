variable.names = c("mu", "tau", "theta"),
n.iter = 30000
)
params <- c("mu", "tau")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
for (i in 1:3) {
gelman.plot(samples_LOGNORM[, paste0("theta[", i, "]")],
xlab = "", ylab = paste("theta[", i, "]"))
}
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 10000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 30000
)
params <- c("mu", "tau", "r", "lambda")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, r = 0.00001, lambda = 0.00001, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 1, r = 100000, lambda = 100000, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = tau_hat, r = r_hat, lambda = lambda_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 40000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 30000
)
params <- c("mu", "tau", "r", "lambda")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "r", "lambda")], main="", xlab="")
r_hat
lambda_hat
tau_hat
mu_hat
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, r = 0.5, lambda = 0.01, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 1, r = 5, lambda = 0.1, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = tau_hat, r = r_hat, lambda = lambda_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 40000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 30000
)
params <- c("mu", "tau", "r", "lambda")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
summary(samples_LOGNORM)
lambda_hat
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, r = 1, lambda = 0.01, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 1, r = 100, lambda = 10, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = tau_hat, r = r_hat, lambda = lambda_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 50000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 50000
)
params <- c("mu", "tau", "r", "lambda")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
r_hat
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, r = 1, lambda = 0.01, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 1, r = 30, lambda = 10, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = tau_hat, r = r_hat, lambda = lambda_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 1000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 50000
)
params <- c("mu", "tau", "r", "lambda")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "r", "lambda")], main="", xlab="")
r_hat
# ===================================================
# LOAD LIBRARIES
# ===================================================
library(CASdatasets)
library(dplyr)
library(rjags)
library(coda)
# ===================================================
# RYTGAARD1990 EXAMPLE DATA
# ===================================================
rytgaard1990_input <- list(
y = c(2.495, 2.120, 2.095, 1.700, 1.650, 1.985, 1.810, 1.625,
3.215, 2.105, 1.765, 1.715, 19.180, 1.915, 1.790, 1.755),
n = c(5, 3, 4, 0, 4)
)
# Add metadata for JAGS model
rytgaard1990_input$N_y <- length(rytgaard1990_input$y)
rytgaard1990_input$N_n <- length(rytgaard1990_input$n)
rytgaard1990_input$min_y <- min(rytgaard1990_input$y)
# ===================================================
# LOAD AND PREPARE CASDATASETS DATA
# ===================================================
data(itamtplcost)
# Extract year and rename 'UltimateCost' for clarity
itamtplcost$year <- format(as.Date(itamtplcost$Date, format = "%d/%m/%Y"), "%Y")
itamtplcost <- itamtplcost %>%
rename(claim_amount = UltimateCost) %>%
select(year, claim_amount)
# Express claim_amount in millions
itamtplcost$claim_amount <- round(itamtplcost$claim_amount / 1000, 3)
itamtplcost_input <- list(
y = itamtplcost$claim_amount,
n = as.numeric(itamtplcost %>% group_by(year) %>% summarise(count=n()) %>% pull(count))
)
itamtplcost_input$N_y <- length(itamtplcost_input$y)
itamtplcost_input$N_n <- length(itamtplcost_input$n)
itamtplcost_input$min_y <- min(itamtplcost_input$y)
model_code_LOGNORM <- "
model {
for(i in 1:N_y) {
y[i] ~ dlnorm(mu, tau)
}
for(i in 1:N_n) {
n[i] ~ dpois(theta[i])
theta[i] ~ dgamma(alpha, beta)
}
mu ~ dnorm(0, 1.0E-8)
sigma ~ dgamma(1, 0.0001)
tau <- 1 / pow(sigma, 2)
alpha ~ dgamma(1, 0.0001)
beta ~ dgamma(1, 0.0001)
}
"
# Compute MLE of parameters
log_x <- log(itamtplcost_input$y)
mu_hat <- mean(log_x) # MLE of mu
sigma_hat <- sd(log_x) # MLE of sigma
x_bar <- mean(itamtplcost_input$n)
s2 <- var(itamtplcost_input$n)
alpha_hat <- x_bar^2/(s2-x_bar)
beta_hat <- alpha_hat/x_bar
alpha_hat
beta_hat
x_bar
mu_hat
tau_hat
sigma_hat
alpha_hat
beta_hat
sigma_hat
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = 0.00001, beta = 0.00001, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = 100000, beta = 100000, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = alpha_hat, beta = beta_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 1000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "r", "lambda"),
n.iter = 30000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
# ===================================================
# LOAD LIBRARIES
# ===================================================
library(CASdatasets)
library(dplyr)
library(rjags)
library(coda)
# ===================================================
# RYTGAARD1990 EXAMPLE DATA
# ===================================================
rytgaard1990_input <- list(
y = c(2.495, 2.120, 2.095, 1.700, 1.650, 1.985, 1.810, 1.625,
3.215, 2.105, 1.765, 1.715, 19.180, 1.915, 1.790, 1.755),
n = c(5, 3, 4, 0, 4)
)
# Add metadata for JAGS model
rytgaard1990_input$N_y <- length(rytgaard1990_input$y)
rytgaard1990_input$N_n <- length(rytgaard1990_input$n)
rytgaard1990_input$min_y <- min(rytgaard1990_input$y)
# ===================================================
# LOAD AND PREPARE CASDATASETS DATA
# ===================================================
data(itamtplcost)
# Extract year and rename 'UltimateCost' for clarity
itamtplcost$year <- format(as.Date(itamtplcost$Date, format = "%d/%m/%Y"), "%Y")
itamtplcost <- itamtplcost %>%
rename(claim_amount = UltimateCost) %>%
select(year, claim_amount)
# Express claim_amount in millions
itamtplcost$claim_amount <- round(itamtplcost$claim_amount / 1000, 3)
itamtplcost_input <- list(
y = itamtplcost$claim_amount,
n = as.numeric(itamtplcost %>% group_by(year) %>% summarise(count=n()) %>% pull(count))
)
itamtplcost_input$N_y <- length(itamtplcost_input$y)
itamtplcost_input$N_n <- length(itamtplcost_input$n)
itamtplcost_input$min_y <- min(itamtplcost_input$y)
model_code_LOGNORM <- "
model {
for(i in 1:N_y) {
y[i] ~ dlnorm(mu, tau)
}
for(i in 1:N_n) {
n[i] ~ dpois(theta[i])
theta[i] ~ dgamma(alpha, beta)
}
mu ~ dnorm(0, 1.0E-8)
sigma ~ dgamma(1, 0.0001)
tau <- 1 / pow(sigma, 2)
alpha ~ dgamma(1, 0.0001)
beta ~ dgamma(1, 0.0001)
}
"
# Compute MLE of parameters
log_x <- log(itamtplcost_input$y)
mu_hat <- mean(log_x) # MLE of mu
sigma_hat <- sd(log_x) # MLE of sigma
x_bar <- mean(itamtplcost_input$n)
s2 <- var(itamtplcost_input$n)
alpha_hat <- x_bar^2/(s2-x_bar)
beta_hat <- alpha_hat/x_bar
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = 0.00001, beta = 0.00001, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = 100000, beta = 100000, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = alpha_hat, beta = beta_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 1000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "r", "lambda")], main="", xlab="")
traceplot(samples_LOGNORM[, c("mu", "tau", "alpha", "beta")], main="", xlab="")
alpha/beta=
summary(itamtplcost_input$n)
summary(itamtplcost_input$n)
var(itamtplcost_input$n)
20^2
alpha_hat
beta_hat
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = alpha_hat-5, beta = beta_hat-0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = alpha_hat+5, beta = beta_hat-0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = alpha_hat, beta = beta_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 1000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 50000
)
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = alpha_hat-5, beta = beta_hat-0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = alpha_hat+5, beta = beta_hat+0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = alpha_hat, beta = beta_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 50000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 50000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 80000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
autocorr.diag(samples_LOGNORM[, "mu"], lags = 1:10)
gelman.diag(samples_LOGNORM, autoburnin = FALSE)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 60000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "alpha", "beta")], main="", xlab="")
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000,
thin = 10
)
traceplot(samples_LOGNORM[, c("mu", "tau", "alpha", "beta")], main="", xlab="")
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 500000,
thin = 10
)
mean(itamtplcost_input$n)
0.035^2
28.563/0.001
28.563*28563
815845/28563
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = alpha_hat-5, beta = beta_hat-0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = alpha_hat+5, beta = beta_hat+0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = 815845, beta = 28563, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
815845/28563^2
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "alpha", "beta")], main="", xlab="")
alpha_hat <- 815845
beta_hat <- 28563
inits_list_LOGNORM <- list(
list(mu = 0.00001, sigma = 0.00001, alpha = alpha_hat-5, beta = beta_hat-0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 123),
list(mu = 100000, sigma = 100000, alpha = alpha_hat+5, beta = beta_hat+0.05, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 456),
list(mu = mu_hat, sigma = sigma_hat, alpha = alpha_hat, beta = beta_hat, .RNG.name = "base::Wichmann-Hill", .RNG.seed = 789)
)
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 30000
)
params <- c("mu", "tau", "alpha", "beta")
for (param in params) {
gelman.plot(samples_LOGNORM[, param], xlab = "", ylab = "")
}
traceplot(samples_LOGNORM[, c("mu", "tau", "alpha", "beta")], main="", xlab="")
jags_model_LOGNORM <- jags.model(
textConnection(model_code_LOGNORM),
data = itamtplcost_input,
inits = inits_list_LOGNORM,
n.chains = 3,
n.adapt = 20000
)
samples_LOGNORM <- coda.samples(
jags_model_LOGNORM,
variable.names = c("mu", "tau", "alpha", "beta"),
n.iter = 300000,
thin = 10
)
